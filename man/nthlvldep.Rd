% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nthlvldep.R
\name{nthlvldep}
\alias{nthlvldep}
\title{Get All Deeper Level Dependencies}
\usage{
nthlvldep(githublink = NULL, pkg = NULL, outtype,
  includebasepkgs = F, recursive = T)
}
\arguments{
\item{githublink}{A link to a github repository of an R package.}

\item{pkg}{Character input of a packagename you want to see the
dependencies of. Multiple input packages can be given in vector format.
This option is still valid in case of a of a given githublink.
If neither a githublink nor a pkg parameter is passed, the function
will use all via \code{library()} attached packages as input packages.}

\item{outtype}{Possible output types:
\itemize{
\item edgelist: An edge list, e.g. to be used for network plots.
\item edgelist_inclusive: An edge list, e.g. to be used for network plots, including
the root package itself when using a githublink.
\item all_packages: An overview of all packages that are eventually loaded. No further
structure visible.
\item list: More detailed than allPKs, it's a list tha containns all packages per
first level dependency.
\item list_inclusive: like list but the first level dependencies are not only
used for the names of the list elements but also included in the list elements
\item unique_list: like "list", just excluding all packages, that are eventually
also loaded by another package in firstlvldep. This way you can see which
dependencies will be removed completely if you remove a certain first level
dependency (a package that you import).
\item unique_list_inclusive: like unique_list, but each first level dependency
is included in the corresponding list element IF it is a unique dependency.
\item tree: Detailed information about which package depends on which, represented
in a data frame that is showing a tree structure.
\item first_level_packages: The vector of packages used as input. This is a combination
when both the githublink and the pkg parameter are set.
\item root_package: Whether to include the name of the package of the given
github link. Returns "Root Package" when no github link was given.
}}

\item{includebasepkgs}{Whether to include base packages in the analysis or not.}

\item{recursive}{If TRUE dependencies of dependencies of ... are considered.}
}
\description{
This function inputs a list of packages, regarded to as fist level
dependencies. It outputs the dependencies, dependencies of dependencies, ...
of these first level dependencies. There are various options for the type of
the output.
}
